# Use an official Python runtime as a base image
FROM python:3.7.4-slim

# Set environment variables to prevent Python from writing pyc files to disc and buffering stdout and stderr
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install system dependencies required for RTI Connext DDS and general build processes
RUN apt-get update && apt-get install -y \
    libssl-dev \
    libncurses5 \
    build-essential \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create and set the working directory
WORKDIR /app

# Copy the requirements.txt file into the container at /app
COPY requirements.txt /app/

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Set up environment variables for RTI Connext DDS
ENV NDDSHOME /opt/rti/ndds
ENV LD_LIBRARY_PATH "${NDDSHOME}/lib:${LD_LIBRARY_PATH}"

# Assuming RTI Connext DDS distributions are available locally or in a storage accessible by build context
# Copy the RTI DDS binaries and libraries into the image
COPY rti_connext_dds-7.2.0 /opt/rti/ndds

# Copy the license file into the image
COPY rti_connext_dds-7.2.0/rti_license.dat ${NDDSHOME}/resource/rti_license.dat

# Copy the local code to the container
COPY . /app

# Set environment variables
ENV FLASK_APP=app:create_app
ENV FLASK_RUN_HOST=0.0.0.0

# Make port 5000 available to the world outside this container
EXPOSE 3000

# Define the command to run your app using flask
# 'flask run' serves the app at http://localhost:5000 by default
CMD ["flask", "run", "--host=0.0.0.0", "--port=3000"]
